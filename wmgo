#!/bin/bash
# wmgo - EWMH window manager launcher
# based on Dmenu Launcher by Scott Garret

# We need a display
#if [[ -z "$DISPLAY" ]]; then
#    exit 1
#fi

# Path to XDG shortcut (*.desktop) directories.
xdg_paths=(
    /usr/share/applications
    /usr/local/share/applications
    ~/.local/share/applications
)

# Path to Dmenu Launcher cache will be stored.
cache="$HOME/.cache/wmgo.cache"

# Path to history file.
hist="$HOME/.config/wmgo/history"

# Dmenu command.
dm="dmenu -b -i $DMENU_OPTIONS"

# Choose proper LSX binary.
if which 'lsx-suckless' &> /dev/null; then
    lsx=lsx-suckless
else
    lsx=lsx
fi

function get-open-windows {
	wmctrl -l | cut -d' ' -f5-
}

function raise-window {
	wmctrl -a "$@"
}

function get-applications {
    # Create cache directory if it doesn't exist.
    mkdir -p "${cache%/*}"
    # Cache names and executable paths of XDG shortcuts.
    for file in $(printf '%s/*.desktop\n' "${xdg_paths[@]}"); do
        # Grab the friendly name and path of the executable.
        # (Thanks, <geirha@freenode/#awk>.)
        awk -F'=' '$1 == "Name" {sub(/Name=/, "", $0); name=$0}
                   $1 == "Exec" {sub(/Exec=/, "", $0); exec=$0}
                   END { print name "|" exec }' "$file" 2> /dev/null
    done > "$cache"
    # Start printing out the menu items, starting with XDG shortcut names...
    sed 's/|.*$//' "$cache" | sort -u
    # ...then, the binary names...
    (IFS=':'; $lsx $PATH | sort -u)
}

function cache-menu {
    get-applications > "${cache}-menu.new"
    mv "${cache}-menu"{.new,}
}

function update-history () {
    (echo "$1"; head -9 "$hist" | grep -Fvx "$1") > "$hist.new"
    mv "$hist"{.new,}
}

build_hist_menu () {
    mkdir -p "${hist%/*}"
    touch "$hist"
    menu_items=$(build_menu)
    hist_items=$(grep -Fx "$(echo "$menu_items")" "$hist")
    echo "$hist_items" > "$hist" # Keep the history file free of invalids.

    # There's probably a better way, but this works, for now.
    if [[ ${#hist_items} > 1 ]]; then
        echo "$hist_items"
        echo "$menu_items" | grep -Fvx "$hist_items"
    else
        echo "$menu_items"
    fi
}

cmd-exists () {
    which "$1" &> /dev/null
}

launch () {
	echo -e "Launching $@"
	# Shouldn't be set when there won't be a terminal attached anymore...
    export TERM='dumb'
    # ...and won't be interactive...
    unset PS1
    "$@" </dev/null &>/dev/null & disown
}


# Launch processes in background, detached and disowned from shell.
[[ "$term_mode" ]] && flag_detach='no' || flag_detach='yes'

# Cache menu in background
cache-menu &

# If cache exists use cache, else build
if [[ ! -f "${cache}-menu" ]]; then
		apps="$(get-applications)"
	else
        apps=`cat "${cache}-menu"`
    fi
wins="$(get-open-windows)" 
cmd=$(echo -e "$wins"\n"$apps" | $dm -fn "Liberation Mono-7" -p "!")

# If nothing is selected -- exit
[[ -z $cmd ]] && exit

if [[ $wins == *$cmd* ]]; then
	raise-window "$cmd" && exit
fi

# If the selection doesn't exist, see if it's an XDG shortcut.
if ! cmd-exists $cmd; then
	cmd=$(grep -F "$cmd|" "$cache" | sed 's/.*|//;s/ %.//g')
    # If there's more than one, ask which binary to use.
    [[ "$(echo "$cmd" | wc -l)" != '1' ]] &&
    cmd=$(echo "$cmd" | $dm -p 'Which one?')
    [[ -z "$cmd" ]] && exit
fi

if cmd-exists $cmd; then
	launch $cmd
fi
